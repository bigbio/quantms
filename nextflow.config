/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/quantms Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Workflow flags
    input              = null // the sdrf and spectra parameters are inferred from this one
    root_folder        = null
    local_input_type   = 'mzML'
    database           = null
    acquisition_method = null
    id_only            = false

    // Input options and validation of sdrf files
    input                      = null
    validate_ontologies        = true // Enable to validate ontology terms in the SDRF
    skip_ms_validation         = false // Skip the validation of the MS metadata in the SDRF
    skip_factor_validation     = true // Skip factor values validation, factor values are important for downstream analysis
    skip_experimental_design_validation = false // Skip the validation of the experimental design in the SDRF (replicates, etc)
    use_ols_cache_only         = true // Use only the OLS cache for ontology validation (no network requests)

    // Tools flags
    posterior_probabilities  = 'percolator'
    add_decoys               = false
    skip_rescoring           = false
    search_engines           = 'comet'
    sage_processes           = 1
    run_fdr_cutoff           = 0.10
    protein_level_fdr_cutoff = 0.01
    psm_level_fdr_cutoff     = 0.01

    // Debug level
    decoydatabase_debug     = 0
    pp_debug                = 0
    extractpsmfeature_debug = 0
    idfilter_debug          = 0
    idscoreswitcher_debug   = 0
    iso_debug               = 0
    db_debug                = 0
    idpep_debug             = 0
    percolator_debug        = 0
    consensusid_debug       = 0
    idmapper_debug          = 0
    luciphor_debug          = 0
    protein_inference_debug = 0
    plfq_debug              = 0
    protein_quant_debug     = 0

    // decoys
    decoy_string                        = 'DECOY_'
    decoy_string_position               = 'prefix'
    decoy_method                        = 'reverse'
    shuffle_max_attempts                = 30
    shuffle_sequence_identity_threshold = 0.5

    // Spectrum pre-processing

    //// Peak picking if used
    openms_peakpicking    = false
    peakpicking_inmemory  = false
    peakpicking_ms_levels = null // means all/auto

    //// Conversion
    reindex_mzml          = true

    // Isobaric analyses
    labelling_type              = null
    isotope_correction          = false // Disable plex isotope correction
    plex_corr_matrix_file       = null // Path to the correction matrix file if disable isotope correction is true

    reference_channel           = '126'
    min_precursor_intensity     = 1.0
    reporter_mass_shift         = 0.002
    select_activation           = 'HCD'
    iso_normalization           = false
    min_reporter_intensity      = 0.0
    min_precursor_purity        = 0.0
    precursor_isotope_deviation = 10.0

    // shared search engine parameters
    enzyme                        = 'Trypsin'
    num_enzyme_termini            = 'fully'
    allowed_missed_cleavages      = 2
    precursor_mass_tolerance      = 5
    precursor_mass_tolerance_unit = 'ppm'
    fixed_mods                    = 'Carbamidomethyl (C)'
    variable_mods                 = 'Oxidation (M)'
    enable_mod_localization       = false
    mod_localization              = 'Phospho (S),Phospho (T),Phospho (Y)'
    fragment_mass_tolerance       = 0.03
    fragment_mass_tolerance_unit  = 'Da'
    fragment_method               = 'HCD' //currently unused. hard to find a good logic to beat the defaults
    isotope_error_range           = '0,1'
    instrument                    = null //auto-determined from tolerances
    protocol                      = 'automatic'
    min_precursor_charge          = 2
    max_precursor_charge          = 4
    min_peptide_length            = 6
    max_peptide_length            = 40
    num_hits                      = 1
    max_mods                      = 3
    min_peaks                     = 10 //minimum number of peaks in a spectrum
    min_pr_mz                     = null
    max_pr_mz                     = null
    min_fr_mz                     = null
    max_fr_mz                     = null

    // MSRESCORE flags
    ms2rescore                      = false
    ms2pip_model_dir                = null
    rescore_range                   = 'independent_run'
    ms2pip_model                    = 'HCD2021'
    feature_generators              = 'deeplc,ms2pip'
    calibration_set_size            = 0.15

    // SNR features flags
    add_snr_feature_percolator      = false

    // PeptideIndexer flags
    IL_equivalent    = true
    unmatched_action = "warn"

    // IDPEP flags
    outlier_handling = "none"

    // DDA_ID flags
    export_decoy_psm   = true

    // Percolator flags
    train_FDR                    = 0.05
    test_FDR                     = 0.05
    fdr_level                    = 'psm_level_fdrs'
    klammer                      = false
    description_correct_features = 0
    subset_max_train             = 300000

    // ConsensusID
    consensusid_algorithm           = 'best'
    min_consensus_support           = 0
    consensusid_considered_top_hits = 0

    // Luciphor options
    luciphor_neutral_losses       = null
    luciphor_decoy_mass           = null
    luciphor_decoy_neutral_losses = null

    // Epifany
    top_PSMs                 = 1
    update_PSM_probabilities = false

    // Protein inference
    picked_fdr               = true
    protein_score            = 'best' // Other options are "Best", "Product", "Sum"
    min_peptides_per_protein = 1
    use_shared_peptides      = true

    // ProteinQuantifier
    top                      = 3
    average                  = 'median'
    best_charge_and_fraction = false
    normalize                = false
    ratios                   = false
    fix_peptides             = false
    include_all              = true
    export_mztab             = true

    // ProteomicsLFQ flags
    protein_inference_method = 'aggregation'
    protein_quant            = 'unique_peptides'
    quantification_method    = 'feature_intensity'
    mass_recalibration       = false
    alignment_order          = 'star'
    add_triqler_output       = false
    quantify_decoys          = false

    // ProteomicsLFQ MBR parameters
    targeted_only            = true // If false MBR will be applied for quantification of all proteins
    feature_with_id_min_score = 0.10
    feature_without_id_min_score = 0.75
    lfq_intensity_threshold = 1000

    // Bruker data
    convert_dotd            = false

    // DIA-NN
    diann_debug             = 3
    scan_window             = 8
    scan_window_automatic   = true
    min_corr                = 2.0
    corr_diff               = 1.0
    time_corr_only          = true
    mass_acc_automatic      = true
    pg_level                = 2
    species_genes           = false
    diann_normalize         = true
    diann_speclib           = null

    // DIA-NN: Extras
    skip_preliminary_analysis    = false
    empirical_assembly_log       = null
    random_preanalysis           = false
    random_preanalysis_seed      = 42
    empirical_assembly_ms_n      = 200


    // MSstats general options
    msstats_remove_one_feat_prot    = true
    ref_condition                   = null
    contrasts                       = 'pairwise'
    msstats_threshold               = 0.05
    skip_post_msstats               = false

    // MSstats LFQ options
    msstatslfq_removeFewMeasurements    = true
    msstatslfq_feature_subset_protein   = 'top3'
    msstatslfq_quant_summary_method     = 'TMP'

    // MSstats ISO options
    msstatsiso_useunique_peptide            = true
    msstatsiso_rmpsm_withfewmea_withinrun   = true
    msstatsiso_summaryformultiple_psm       = 'sum'
    msstatsiso_summarization_method         = 'msstats'
    msstatsiso_global_norm                  = true
    msstatsiso_remove_norm_channel          = true
    msstatsiso_reference_normalization      = true
    msstats_plot_profile_qc                 = false

    // pmultiqc options
    enable_pmultiqc          = true
    pmultiqc_idxml_skip      = true

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    skip_table_plots           = false
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = './results'
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

    // Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        conda.createTimeout    = '1 h'
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        singularity.pullTimeout = '1 h'
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    micromamba {
        conda.enabled          = true
        conda.useMicromamba    = true
        conda.createTimeout    = '1 h'
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    test            { includeConfig 'conf/test_lfq.config'        }
    test_localize   { includeConfig 'conf/test_localize.config'   }
    test_tmt        { includeConfig 'conf/test_tmt.config'        }
    test_tmt_corr   { includeConfig 'conf/test_tmt_corr.config'   }
    test_lfq        { includeConfig 'conf/test_lfq.config'        }
    test_lfq_sage   { includeConfig 'conf/test_lfq_sage.config'   }
    test_dia        { includeConfig 'conf/test_dia.config'        }
    test_latest_dia { includeConfig 'conf/test_latest_dia.config' }
    test_full_lfq   { includeConfig 'conf/test_full_lfq.config'   }
    test_full_tmt   { includeConfig 'conf/test_full_tmt.config'   }
    test_full_dia   { includeConfig 'conf/test_full_dia.config'   }
    test_full       { includeConfig 'conf/test_full_lfq.config'   }
    test_dda_id     { includeConfig 'conf/test_dda_id.config'     }
    mambaci         { includeConfig 'conf/mambaci.config'         }
    dev             { includeConfig 'conf/dev.config'             }
    pride_slurm     { includeConfig 'conf/pride_codon_slurm.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load nf-core/quantms custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/quantms.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/quantms'
    author          = """Yasset Perez-Riverol"""
    homePage        = 'https://github.com/bigbio/quantms'
    description     = """Quantitative Mass Spectrometry nf-core workflow"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '1.3.1dev'
    doi             = '10.5281/zenodo.7754148'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  ${manifest.name} ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "  https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
