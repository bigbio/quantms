
// verbose_modules.config
process {

    // Override default publish behavior to include all intermediate outputs,
    // here we use parameter publish_dir_mode.
    publishDir = [
        path: { "${params.outdir}/intermediate/${task.process.tokenize(':')[-1].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    // Define custom path for specific spectra processes, all under spectra directory
    withName: '.*:THERMORAWFILEPARSER' {
        publishDir = [
            path: { "${params.outdir}/spectra/thermorawfileparser" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:ISOBARIC_ANALYZER' {
        publishDir = [
            path: { "${params.outdir}/spectra/isobaric_analyzer" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:MZML_INDEXING' {
        publishDir = [
            path: { "${params.outdir}/spectra/mzml_indexing" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
   }

    withName: '.*:SPECTRUM_FEATURES' {
        publishDir = [
            path: { "${params.outdir}/spectra/spectrum_features" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

   // Peptide search engine steps stored in specific path peptide_identification
    withName: '.*:COMET' {
        publishDir = [
            path: { "${params.outdir}/peptide_identification/comet" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:MSGF' {
        publishDir = [
            path: { "${params.outdir}/peptide_identification/msgf" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:SAGE' {
        publishDir = [
            path: { "${params.outdir}/peptide_identification/sage" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Set the default publish for peptide postprocessing steps
    withName: '.*:PERCOLATOR' {
        publishDir = [
            path: { "${params.outdir}/peptide_postprocessing/percolator" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:EXTRACT_PSM_FEATURES' {
        publishDir = [
            path: { "${params.outdir}/peptide_postprocessing/psm_features" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:CONSENSUSID' {
        publishDir = [
            path: { "${params.outdir}/peptide_postprocessing/consensusid" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:ID_FILTER' {
        publishDir = [
            path: { "${params.outdir}/peptide_postprocessing/id_filter" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:FALSE_DISCOVERY_RATE' {
        publishDir = [
            path: { "${params.outdir}/peptide_postprocessing/false_discovery_rate" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
