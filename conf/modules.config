/*
========================================================================================
    Config file for defining DSL2 per module options
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir  = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    // Local Subworkflows
    // INPUT_CHECK
    withName: 'NFCORE_QUANTMS:QUANTMS:INPUT_CHECK:SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NFCORE_QUANTMS:QUANTMS:CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}

// OPENMSPEAKPICKER
if (params.openms_peakpicking){
    process {
            withName: 'NFCORE_QUANTMS:QUANTMS:.*:OPENMSPEAKPICKER' {
            publishDir  = [
                path: { "${params.outdir}/openmspeakpicker" },
                mode: params.publish_dir_mode,
                pattern: '*.log',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

// DECOYDATABASE
if (params.add_decoys) {
    process {
        withName: 'NFCORE_QUANTMS:QUANTMS:.*:DECOYDATABASE' {
            publishDir  = [
                path: { "${params.outdir}/decoydatabase" },
                mode: params.publish_dir_mode,
                pattern: '*.log',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

if (params.posterior_probabilities == "percolator") {
    process {
        // EXTRACTPSMFEATURE
        withName: 'NFCORE_QUANTMS:QUANTMS:.*:EXTRACTPSMFEATURE' {
            publishDir  = [
                path: { "${params.outdir}/extractpsmfeature" },
                mode: params.publish_dir_mode,
                pattern: '*.log',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

if (params.search_engines.split(",").size() == 1) {
    process {

        // IDSCORESWITCHER
        withName: 'NFCORE_QUANTMS:QUANTMS:.*:ID:PSMFDRCONTROL:IDSCORESWITCHER' {
            ext.args    = [
                "-new_score_orientation lower_better",
                "-old_score \"Posterior Error Probability\"",
                "-new_score_type q-value"
            ].join(' ').trim()
            publishDir  = [
                path: { "${params.outdir}/idscoreswitcher" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

if (params.enable_mod_localization) {
    process {

        // IDSCORESWITCHERFORLUCIPHOR
        withName: 'NFCORE_QUANTMS:QUANTMS:.*:ID:PHOSPHOSCORING:IDSCORESWITCHERFORLUCIPHOR' {
            ext.args    = [
                "-new_score_orientation lower_better",
                "-old_score \"q-value\"",
                "-new_score_type Posterior Error Probability"
            ].join(' ').trim()
            publishDir  = [
                path: { "${params.outdir}/idscoreswitcherforluciphor" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

process {
    // ISOBARICANALYZER
    withName: 'NFCORE_QUANTMS:QUANTMS:TMT:.*:ISOBARICANALYZER' {
        publishDir  = [
            path: { "${params.outdir}/isobaricanalyzer" },
            mode: params.publish_dir_mode,
            pattern: '*.log',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // IDMAPPER
    withName: 'NFCORE_QUANTMS:QUANTMS:TMT:.*:IDMAPPER' {
        publishDir  = [
            path: { "${params.outdir}/idmapper" },
            mode: params.publish_dir_mode,
            pattern: '*.{log,consensusXML}',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // EPIFILTER
    withName: 'NFCORE_QUANTMS:QUANTMS:TMT:.*:EPIFILTER' {
        ext.args    = [
            "-score:prot \"$params.protein_level_fdr_cutoff\"",
            "-delete_unreferenced_peptide_hits",
            "-remove_decoys"
        ].join(' ').trim()
        ext.suffix  = '.consensusXML'
        publishDir  = [
            path: { "${params.outdir}/epifilter" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

if (params.protein_inference_bayesian) {
    process {
        // EPIFANY
        withName: 'NFCORE_QUANTMS:QUANTMS:.*:EPIFANY' {
            publishDir  = [
                path: { "${params.outdir}/epifany" },
                mode: params.publish_dir_mode,
                pattern: '*.log',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
} else {
    process {
        // PROTEININFERENCER
        withName: 'NFCORE_QUANTMS:QUANTMS:.*:PROTEININFERENCER' {
            publishDir  = [
                path: { "${params.outdir}/proteininferencer" },
                mode: params.publish_dir_mode,
                pattern: '*.log',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

process {

    // INDEXPEPTIDES
    withName: 'NFCORE_QUANTMS:QUANTMS:.*:INDEXPEPTIDES' {
        publishDir  = [
            path: { "${params.outdir}/indexpeptides" },
            mode: params.publish_dir_mode,
            pattern: '*.log',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // IDFILTER
    withName: 'NFCORE_QUANTMS:QUANTMS:.*:ID:PSMFDRCONTROL:IDFILTER' {
        ext.args    = "-score:pep \"$params.psm_pep_fdr_cutoff\""
        ext.suffix  = '.idXML'
        publishDir  = [
            path: { "${params.outdir}/idfilter" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }
}
