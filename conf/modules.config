/*
========================================================================================
    Config file for defining DSL2 per module options
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    // Set default publish directory default naming for each module
    //publishDir  = [
    //    path: { "${params.outdir}/${task.process.tokenize(':')[-1].toLowerCase()}" },
    //    mode: params.publish_dir_mode,
    //    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    //]

    // Set default publish directory for software versions
    withName: 'BIGBIO_QUANTMS:QUANTMS:CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

    // Set default publish directory for pmultiqc reports
    withName: 'BIGBIO_QUANTMS:QUANTMS:SUMMARY_PIPELINE' {
        publishDir = [
            path: { "${params.outdir}/pmultiqc" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Set default publish directory for SDRF files
    withName: 'BIGBIO_QUANTMS:QUANTMS:INPUT_CHECK:SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/sdrf" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Set default publish directory for configurations files from SDRF parsing
    withName: '.*:SDRF_PARSING' {
        publishDir = [
            path: { "${params.outdir}/sdrf" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Set default publish directory for all msstats outputs lfq and tmt
    withName: '.*:MSSTATS_LFQ|MSSTATS_TMT' {
        publishDir = [
            path: { "${params.outdir}/msstats" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Result tables from multiple pipelines including LFQ, TMT, DIA, DDA
    withName: '.*:PROTEOMICSLFQ|PROTEIN_QUANTIFIER|MSSTATS_CONVERTER|FINAL_QUANTIFICATION|CONVERT_RESULTS' {
        publishDir = [
            path: { "${params.outdir}/quant_tables" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Set default publish directory for all psm tables on id workflow
    withName: '.*:PSM_CONVERSION' {
        publishDir = [
            path: { "${params.outdir}/psm_tables" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

if (params.search_engines.split(",").size() == 1) {
    process {

        // IDSCORESWITCHER
        withName: '.*:ID:PSM_FDR_CONTROL:ID_SCORE_SWITCHER' {
            ext.args    = [
                "-new_score_orientation lower_better",
                "-old_score \"Posterior Error Probability\"",
                "-new_score_type q-value",
                "-debug $params.idscoreswitcher_debug"
            ].join(' ').trim()
        }
    }
} else {
    process {
        // FDRCONSENSUSID
        withName: '.*:FDR_CONSENSUSID' {
            ext.args    = "-PSM true -protein false"
        }
    }
}

if (params.enable_mod_localization) {
    process {

        // ID_SCORE_SWITCHER_LUCIPHOR
        withName: '.*:ID:PHOSPHO_SCORING:ID_SCORE_SWITCHER' {
            ext.args    = [
                "-new_score_orientation lower_better",
                "-old_score \"q-value\"",
                "-new_score_type \"Posterior Error Probability\"",
                "-debug $params.idscoreswitcher_debug"
            ].join(' ').trim()
        }

        // LuciphorAdapter
        withName: '.*:ID:PHOSPHO_SCORING:LUCIPHOR' {
            ext.args    = "-debug $params.luciphor_debug"
        }
    }
}

process {

    // IDMAPPER
    withName: '.*:TMT:.*:ID_MAPPER' {
        ext.args    = "-debug $params.idmapper_debug"
    }

    // IDFILTER on PROTEIN LEVEL
    level = params.protein_quant == 'strictly_unique_peptides' ? 'prot' : 'proteingroup'
    decoys_present = params.quantify_decoys ? ' ' : '-remove_decoys'
    withName: '.*:TMT:PROTEIN_INFERENCE:ID_FILTER' {
        ext.args    = [
            "-score:${level} \"$params.protein_level_fdr_cutoff\"",
            "-score:psm \"$params.psm_level_fdr_cutoff\"",
            "-delete_unreferenced_peptide_hits",
            "${decoys_present}"
        ].join(' ').trim()
        ext.suffix  = '.consensusXML'
    }

    // PROTEINQUANTIFIER
    withName: '.*:TMT:PROTEIN_QUANT:PROTEIN_QUANTIFIER' {
        ext.args    = "-debug $params.protein_quant_debug"
    }

    // MSSTATSCONVERTER
    withName: '.*:TMT:PROTEIN_QUANT:MSSTATS_CONVERTER' {
        ext.args    = "-debug $params.protein_quant_debug"
    }

    //PERCOLATOR
    withName: '.*:PERCOLATOR' {
        ext.args    = [
            "-debug $params.percolator_debug",
            (params.fdr_level != 'psm_level_fdrs') ? "-" + params.fdr_level : ""
        ].join(' ').trim()
    }
}

if (params.protein_inference_method.equals("bayesian")) {
    process {
        // EPIFANY
        withName: '.*:PROTEIN_INFERENCE_EPIFANY' {
            ext.args    = "-keep_best_psm_only false -debug $params.protein_inference_debug"
        }
    }
} else {
    process {
        // PROTEIN_INFERENCE
        withName: '.*:PROTEIN_INFERENCE' {
            ext.args    = "-debug $params.protein_inference_debug"
        }
    }
}

process {
    // IDFILTER
    withName: '.*:ID:PSM_FDR_CONTROL:ID_FILTER' {
        ext.args    = "-score:psm \"$params.run_fdr_cutoff\""
        ext.suffix  = '.idXML'
    }

    withName: '.*:DDA_ID:PSM_FDR_CONTROL:ID_FILTER' {
        ext.args    = "-score:psm \"$params.run_fdr_cutoff\""
        ext.suffix  = '.idXML'
    }

    // PROTEOMICSLFQ
    withName: '.*:LFQ:PROTEOMICSLFQ' {
        ext.args    = "-debug $params.plfq_debug"
    }

    // DIA-NN
    //withName: '.*:DIA:.*' {
    //}

    withName: ".*:DIA:INSILICO_LIBRARY_GENERATION" {
        ext.args   = [
            "--met-excision",
        ].join(' ').trim()
    }

    withName: ".*:DIA:PRELIMINARY_ANALYSIS" {
        ext.args   = [
            params.quick_mass_acc ? "--quick-mass-acc" : '', // if mass-acc is given, this will be ignored
            params.performance_mode ? "--min-corr 2 --corr-diff 1 --time-corr-only" : ''
        ].join(' ').trim()
    }

    // MS2RESCORE
    withName: 'MSRESCORE_FEATURES' {
        ext.args   = [
            "--ms2pip_model ${params.ms2pip_model}",
            "--calibration_set_size ${params.calibration_set_size}",
            params.feature_generators.trim() ? "--feature_generators ${params.feature_generators}" : ''
        ].join(' ').trim()
    }

    withName: '.*:DDA_ID:ID_SCORE_SWITCHER' {
        ext.args   = [
            "-new_score_orientation lower_better",
            "-new_score_type \"Posterior Error Probability\"",
            "-debug $params.idscoreswitcher_debug"
        ].join(' ').trim()
    }

    withName: '.*:DDA_ID:PSM_FDR_CONTROL:ID_SCORE_SWITCHER' {
        ext.args    = [
            "-new_score_orientation lower_better",
            "-old_score \"Posterior Error Probability\"",
            "-new_score_type q-value",
            "-debug $params.idscoreswitcher_debug"
        ].join(' ').trim()
    }
}
